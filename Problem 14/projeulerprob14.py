# -*- coding: utf-8 -*-
"""ProjEulerProb14

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N0J7uaxkxCjdK4t-UVH2402b6BFilIfm
"""

cache = { 1: 1 }
def chain(cache, n):
    if not cache.get(n,0):
        if n % 2: cache[n] = 1 + chain(cache, 3*n + 1)
        else: cache[n] = 1 + chain(cache, n/2)
    return cache[n]

m,n = 0,0
for i in range(1, 1000000):
    c = chain(cache, i)
    if c > m: m,n = c,i

print (n)

import time
 
        start = time.time()
          
        def collatz(num):
           collatzSequence = [num]
          
           while num != 1:
               if num % 2 == 0:
                   num = int(num / 2)
                   collatzSequence.append(num)
               elif num % 2 == 1:
                   num = (num * 3) + 1
                   collatzSequence.append(num)
          
           return collatzSequence
         
        largest = 0
        largestNum = 0
         
        for i in range(1, 1000000):
           if i % 2 != 0:
               if len(collatz(i)) > largest:
                   largest = len(collatz(i))
                   largestNum = i
              
        print(largestNum, largest)
          
         
        elapsed = time.time() - start
         
        print(elapsed, "seconds")